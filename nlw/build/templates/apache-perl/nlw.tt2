[%- required = {} -%]
[%- MACRO simple_handler( loc, handler ) BLOCK %]
    <Location [% loc %]>
        SetHandler  perl-script
        [%- UNLESS required.$handler %]
            PerlModule [% handler %]
            [%- required.$handler = 1 -%]
        [%- END %]
        PerlHandler [% handler %]
    </Location>
[%- END %][%# simple_handler() %]

[%- MACRO match_handler( locpattern, handler ) BLOCK %]
    <LocationMatch [% locpattern %]>
        SetHandler  perl-script
        PerlHandler +[% handler %]
    </LocationMatch>
[%- END %][%# match_handler() %]

[%- MACRO vhost_common( for_ssl_vhost ) BLOCK %]
    ServerAdmin [% config.server_admin %]
    DocumentRoot [% config.data_root_dir %]/docroot
    PerlSetEnv HOME [% config.prefix_dir %]/var/www
[%- IF config.is_dev %]
    PerlPassEnv NLW_APPCONFIG
[%- END %]
    PerlSetEnv APACHE_LOG_DIR [% config.log_dir %]

[%- IF config.is_dev %]
    PerlSetVar ReloadAll Off
    PerlSetVar ReloadModules "Socialtext::WebApp Socialtext::WebApp::* Socialtext::* Socialtext::Handler Socialtext::Handler::* Socialtext::RequestContext"
    PerlInitHandler  +Apache::Reload
[%- END %]

[%- IF config.apache_status %]
    # Status handlers
    <Location /status>
        SetHandler server-status
        Order Deny,Allow
        Deny from all
        Allow from [% config.apache_status %]
    </Location>
    <Location /perl-status>
        <Perl>
            eval { require B::TerseSize };
        </Perl>
        SetHandler perl-script
        PerlHandler +Apache::Status
        PerlSetVar StatusOptionsAll On
        PerlSetVar StatusTerseSizeMainSummary On
        Order Deny,Allow
        Deny from all
        Allow from [% config.apache_status %]
    </Location>
[%- END %]

    PerlCleanupHandler  +Socialtext::Handler::Cleanup
    PerlPostReadRequestHandler +Socialtext::Apache::ForwardedFor

# Order is important in these next three sections
    <Location />
        PerlInitHandler  +Socialtext::InitHandler
    </Location>

    [% simple_handler( '/',      'Socialtext::Handler::REST' ) %]
    [% simple_handler( '/nlw', 'Socialtext::Handler::Authen' ) %]

    <Location /nlw/ntlm>
        SetHandler          perl-script
        PerlHandler         +Socialtext::Handler::NTLM
        PerlAuthenHandler   +Socialtext::Apache::Authen::NTLM
        AuthType            ntlm
        Require             valid-user
# In the event that NTLM SSO Authen fails, display a login page to the User
# - isn't ideal as we lose the "auto-redirect to the page you wanted to go
#   to", but its better than a generic 403 error page
        ErrorDocument       403     /nlw/login.html
    </Location>

[%- IF not config.socialtext_open %]
    <Location /nlw/control>
        SetHandler  perl-script
        PerlHandler +Socialtext::Handler::ControlPanel
        PerlAccessHandler  +Socialtext::AccessHandler::IsBusinessAdmin
    </Location>
[%- END %]

    <LocationMatch "^/[^/]+/index\.cgi">
        ErrorDocument 404 /index.cgi
    </LocationMatch>

    # webplugin drop-ins should go in
    # /var/www/socialtext/webplugin/PLUGIN-NAME
    # two directories are expected there, a cgi directory scripts
    # and a static directory for static files
    # URI paths would be /webplugin/cgi/PLUGIN-NAME/script.cgi for scripts
    #     or /webplugin/PLUGIN-NAME/foo.html for static files and resources
    AliasMatch ^/webplugin/([^/c]+)(.*) [% config.data_root_dir %]/webplugin/$1/static$2
    <LocationMatch "^/webplugin/[^/+].*.*">
        SetHandler default-handler
        Options -MultiViews +FollowSymlinks
        Order allow,deny
        Allow from all
    </LocationMatch>

    ScriptAliasMatch ^/webplugin/cgi/([^/]+)(.*) [% config.data_root_dir %]/webplugin/$1/cgi$2
    <LocationMatch "^/webplugin/cgi/[^/+].*">
        SetHandler cgi-script
        Options +ExecCGI -MultiViews +FollowSymlinks
        Order allow,deny
        Allow from all
    </LocationMatch>

[%- END %][%# MACRO vhost_common %]

[%# Real code starts here %]
# This file is the Socialtext-specific Apache configuration.  It is designed
# to be Included from a parent configuration file.  You can use the
# /etc/apache-perl/st-httpd.conf that we build for you, or, if you have other
# server settings you prefer, you can Include it from your own
# /etc/apache-perl/httpd.conf.
# ---------------------------------------------------------------------------
# You can set set the size limits for Apache processes by setting the
# appropriate variables below.  These are passed through to Apache::SizeLimit
# via Socialtext::Handler::Cleanup.
# Set min/max sizes to pass to Apache::SizeLimit
# See http://search.cpan.org/dist/Apache-SizeLimit/

# This sets the maximum size of the Apache process, including both shared
# and unshared memory.
# PerlSetVar st_max_process_size 200000

# These two are effectively meaningless if Apache::SizeLimit can't
# determine the shared memory size for your platform.

# This sets the maximum amount of unshared memory the process can use.
[%- IF config.is_dev %]
#   368640 == 360MB
PerlSetVar st_max_unshared_size 368640
[%- ELSE %]
#   327680 == 320MB
PerlSetVar st_max_unshared_size 327680
[%- END %]

# This sets the minimum amount of shared memory the process must have.
# PerlSetVar st_min_shared_size   70000

[%- IF config.inc -%]
    <Perl>
        use lib
    [%- FOREACH dirname IN config.inc %]
            '[% dirname %]'[%- IF loop.last -%];[%- ELSE -%],[%- END -%]
    [%- END %]
    [% IF config.is_dev %]
    use lib '[% ENV.HOME %]/perl5/lib/perl5';
    [% END %]
    </Perl>
[%- END -%]

PerlSetEnv  NLW_CONFIG      [% config.nlw_config_file %]
PerlSetEnv  APACHE_LOG_DIR  [% config.log_dir %]
[%- IF ENV.HARNESS_ACTIVE %]
PerlSetEnv  HARNESS_ACTIVE  [% ENV.HARNESS_ACTIVE %]
[%- END %]
[%# REVIEW - hack to make Socialtext::Workspace->uri work in devs envs %]
[%- IF config.is_dev %]
PerlSetEnv  NLW_FRONTEND_PORT  [% config.frontend_ports.http %]
PerlSetEnv  ST_APP_CONFIG [% config.appliance_config_file %]
PerlSetEnv  NLW_DEV_MODE  1
[%- END %]

# These are the only modules we load with PerlModule.  All the other handlers
# load via the PerlHandler +HandlerName mechanism.
PerlModule  Socialtext::ModPerl


<VirtualHost *:[% config.backend_ports.http %]>
[% vhost_common( 0 ) %]
</VirtualHost>

<VirtualHost *:[% config.backend_ports.https %]>
    SetEnv  NLWHTTPSRedirect  1
[% vhost_common( 1 ) %]
</VirtualHost>
