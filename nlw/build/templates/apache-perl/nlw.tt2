[% MACRO simple_handler( loc, handler ) BLOCK %]
    <Location [% loc %]>
        SetHandler  perl-script
        PerlHandler +[% handler %]
    </Location>
[% END %][%# simple_handler() %]

[% MACRO match_handler( locpattern, handler ) BLOCK %]
    <LocationMatch [% locpattern %]>
        SetHandler  perl-script
        PerlHandler +[% handler %]
    </LocationMatch>
[% END %][%# match_handler() %]

[% MACRO vhost_common( for_ssl_vhost ) BLOCK %]
    ServerAdmin [% config.server_admin %]
    DocumentRoot [% config.data_root_dir %]/docroot
    PerlSetEnv HOME [% config.prefix_dir %]/var/www
[% IF config.is_dev %]
    PerlPassEnv NLW_APPCONFIG
[% END %]
    PerlSetEnv APACHE_LOG_DIR [% config.log_dir %]

[% IF config.is_dev %]
    ErrorDocument 500 /nlw/errors/500.html

    PerlSetVar ReloadAll Off
    PerlSetVar ReloadModules "Socialtext::WebApp Socialtext::WebApp::* Socialtext::* Socialtext::Handler Socialtext::Handler::* Socialtext::RequestContext"
    PerlInitHandler  +Apache::Reload
[% END %]

[% IF config.apache_status %]
    # Status handlers
    <Location /status>
        SetHandler server-status
        Order Deny,Allow
        Deny from all
        Allow from [% config.apache_status %]
    </Location>
    <Location /perl-status>
        <Perl>
            eval { require B::TerseSize };
        </Perl>
        SetHandler perl-script
        PerlHandler +Apache::Status
        PerlSetVar StatusOptionsAll On
        PerlSetVar StatusTerseSizeMainSummary On
        Order Deny,Allow
        Deny from all
        Allow from [% config.apache_status %]
    </Location>
[% END %]

[% IF config.single %]
    [% PROCESS 'shared/rewrite.tt2' %]
[% END %]

    PerlCleanupHandler  +Socialtext::Handler::Cleanup

# Order is important in these next three sections
    <Location />
        PerlInitHandler  +Socialtext::InitHandler
    </Location>

    [% simple_handler( '/',      'Socialtext::Handler::REST' ) %]
    [% simple_handler( '/nlw', 'Socialtext::Handler::Authen' ) %]

[% IF not config.socialtext_open %]
    <Location /nlw/control>
        SetHandler  perl-script
        PerlHandler +Socialtext::Handler::ControlPanel
        PerlAccessHandler  +Socialtext::AccessHandler::IsBusinessAdmin
    </Location>
[% END %]

    <LocationMatch "^/[^/]+/index\.cgi">
        ErrorDocument 404 /index.cgi
    </LocationMatch>
[%- IF config.single %]
    <Location /static>
        # When running as a single server the rule for 
        # passing to the REST handler can be too consuming.
        # Use this rule for content that should be handled
        # as files.
        SetHandler default-handler
    </Location>
[% END -%]

[% END %][%# MACRO vhost_common %]

[%# Real code starts here %]
# This file is the Socialtext-specific Apache configuration.  It is designed
# to be Included from a parent configuration file.  You can use the
# /etc/apache-perl/st-httpd.conf that we build for you, or, if you have other
# server settings you prefer, you can Include it from your own
# /etc/apache-perl/httpd.conf.
# ---------------------------------------------------------------------------
# You can set set the size limits for Apache processes by setting the
# appropriate variables below.  These are passed through to Apache::SizeLimit
# via Socialtext::Handler::Cleanup.
# Set min/max sizes to pass to Apache::SizeLimit
# See http://search.cpan.org/dist/Apache-SizeLimit/

# This sets the maximum size of the Apache process, including both shared
# and unshared memory.
# PerlSetVar st_max_process_size 200000

# These two are effectively meaningless if Apache::SizeLimit can't
# determine the shared memory size for your platform.

# This sets the maximum amount of unshared memory the process can use.
PerlSetVar st_max_unshared_size 240000

# This sets the minimum amount of shared memory the process must have.
# PerlSetVar st_min_shared_size   70000

[% PROCESS 'apache-perl/modules.tt2' %]
[%- IF config.inc -%]
    <Perl>
        use lib
    [%- FOREACH dirname IN config.inc %]
            '[% dirname %]'[%- IF loop.last -%];[%- ELSE -%],[%- END -%]
    [%- END %]
    </Perl>
[%- END -%]

PerlSetEnv  NLW_CONFIG      [% config.nlw_config_file %]
PerlSetEnv  APACHE_LOG_DIR  [% config.log_dir %]
[% IF ENV.HARNESS_ACTIVE %]
PerlSetEnv  HARNESS_ACTIVE  [% ENV.HARNESS_ACTIVE %]
[% END %]
[%# REVIEW - hack to make Socialtext::Workspace->uri work in devs envs %]
[% IF config.is_dev %]
PerlSetEnv  NLW_FRONTEND_PORT  [% config.apache2_port %]
PerlSetEnv  NLW_DEV_MODE  1
[% END %]

# These are the only modules we load with PerlModule.  All the other handlers
# load via the PerlHandler +HandlerName mechanism.
PerlModule  Socialtext::ModPerl


<VirtualHost *:[% config.backend_port %]>
[% IF !config.apache_proxy  %]
    ServerName [% config.nlw_server_hostname %]
[% END %]
[% vhost_common( 0 ) %]
</VirtualHost>

[% IF config.apache_proxy %]
<VirtualHost *:[% config.backend_port + config.ssl_port_difference %]>
    SetEnv  NLWHTTPSRedirect  1
[% vhost_common( 1 ) %]
</VirtualHost>
[% END %][%# config.apache_proxy %]

[% IF config.eu_httpd_exists %]
<VirtualHost 10.8.0.1:[% config.backend_port %]>
    ServerName www.eu.socialtext.net
[% vhost_common( 1 ) %]
</VirtualHost>

<VirtualHost 10.8.0.1:[% config.backend_port + config.ssl_port_difference %]>
    ServerName www.eu.socialtext.net
    SetEnv  NLWHTTPSRedirect  1
[% vhost_common( 1 ) %]
</VirtualHost>
[% END %][%# config.eu_httpd_exists %]
