[%# This macro defines the main chunk of the apache config.  We load this chunk into
  # Virtual host blocks below... %]
[%- MACRO server_common( apache_perl_port, for_ssl_vhost ) BLOCK %]
[%- IF config.is_appliance AND config.hostname_conf_exists %]
    Include /etc/apache2/conf.d/hostname.conf
[%- ELSE %]
    ServerName [% config.nlw_web_hostname %]
    [%- FOREACH alias in config.nlw_server_aliases %]
    ServerAlias [% alias %]
    [%- END %]
[%- END %][%# is_appliance %]

    ServerAdmin [% config.server_admin %]
    DocumentRoot [% config.data_root_dir %]
    ProxyRequests Off

[%- IF config.is_appliance || config.is_dev %]
    [%- SET console_base = '/var/www/console' -%]
    [%- IF config.is_dev %]
        [%- console_base = config.data_root_dir _ '/console' -%]
    [%- END %]
    Alias /console/ [% console_base %]/

    <Directory [% console_base %]>
        Options FollowSymlinks
    </Directory>

    AddHandler cgi-script .cgi
    <Location /console>
        DirectoryIndex index.html index.cgi
        SetHandler cgi-script
        Options ExecCGI
    </Location>
[%- END %]

    <Proxy *>
        Order deny,allow
        Deny from all
    </Proxy>

    <Proxy http://localhost:*/*>
        Order deny,allow
        Allow from all
    </Proxy>

    ProxyPreserveHost On
    ExpiresActive On
    RewriteEngine On

    # Have the Apache2 frontend serve the profile photos, but pass-thru
    # to the backend if the photo doesn't exist.
    RewriteCond %{REQUEST_METHOD} ^GET$
    RewriteCond %{REQUEST_URI} ^/data/people/([^/]+)/small_photo
    RewriteCond [% config.cache_dir %]/avatar/%1-small.png -f
    RewriteRule ^/data/people/([^/]+)/small_photo /nlw/avatar/$1-small.png [PT]

    RewriteCond %{REQUEST_METHOD} ^GET$
    RewriteCond %{REQUEST_URI} ^/data/people/([^/]+)/photo
    RewriteCond [% config.cache_dir %]/avatar/%1-large.png -f
    RewriteRule ^/data/people/([^/]+)/photo /nlw/avatar/$1-large.png [PT]

    Alias /nlw/avatar [% config.cache_dir %]/avatar
    <Location /nlw/avatar>
        Order allow,deny
        Allow from all
    </Location>
    <LocationMatch ^/nlw/avatar/>
         # Set these once we figure out how to get "user updates their own avatar" to
         # re-cache properly:
         #        ExpiresByType image/png "now plus 5 minutes"
         #        Header append Cache-Control "public, must-revalidate, max-age=300, pre-check=300, post-check=300"
         Header set Expires -1
         Header append Cache-Control "public, must-revalidate, max-age=0, pre-check=0, post-check=0"
    </LocationMatch>

    # Have the Apache2 frontend serve the wafl images as well, but pass-thru
    # to the backend if the wafl image doesn't exist.
    RewriteCond %{REQUEST_METHOD} ^GET$
    RewriteCond %{REQUEST_URI} ^/data/wafl/(.*)
    RewriteCond [% config.cache_dir %]/wafl/%1.png -f
    RewriteRule ^/data/wafl/(.*) /nlw/wafl/$1.png [PT]

    Alias /nlw/wafl [% config.cache_dir %]/wafl
    <Location /nlw/wafl>
        Order allow,deny
        Allow from all
    </Location>
    <LocationMatch ^/nlw/wafl/>
         # Set these once we figure out how to get "user updates their own avatar" to
         # re-cache properly:
         #        ExpiresByType image/png "now plus 5 minutes"
         #        Header append Cache-Control "public, must-revalidate, max-age=300, pre-check=300, post-check=300"
         Header set Expires -1
         Header append Cache-Control "public, must-revalidate, max-age=0, pre-check=0, post-check=0"
    </LocationMatch>

[%# The rewrite file must come before any of the redirect confs below %]
[% PROCESS 'shared/rewrite.tt2' %]

    # webplugin drop-ins should go in
    # [% config.data_root_dir %]/webplugin/PLUGIN-NAME
    # two directories are expected there, a cgi directory scripts
    # and a static directory for static files
    # URI paths would be /webplugin/cgi/PLUGIN-NAME/script.cgi for scripts
    #     or /webplugin/PLUGIN-NAME/foo.html for static files and resources
    ScriptAliasMatch ^/webplugin/cgi/([^/]+)(.*) [% config.data_root_dir %]/webplugin/$1/cgi$2
    <LocationMatch "^/webplugin/cgi/[^/+].*">   
        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
        Order allow,deny
        Allow from all
    </LocationMatch>   

    AliasMatch ^/webplugin/([^/]+)(.*) [% config.data_root_dir %]/webplugin/$1/static$2
    <LocationMatch "^/webplugin/[^/+].*.*"> 
        Options -MultiViews +SymLinksIfOwnerMatch
        Order allow,deny
        Allow from all
    </LocationMatch>

    # Do not set ExpiresDefault!  That will cause firefox to cache redirects

    <Location /static>
        ExpiresDefault "access plus 1 years"
        FileETag none
    </Location>

    <Location /static/s2/javascript/test>
        ExpiresDefault "access plus 1 seconds"
        FileETag none
    </Location>

    AliasMatch ^/nlw/plugin/([^/]+)/(.*) [% config.static_dir %]/plugin/$1/share/$2
    <LocationMatch /nlw/plugin>
        Order allow,deny
        Allow from all
        ExpiresDefault "access plus 1 years"
        FileETag none
    </LocationMatch>

    # Cache attachments
    <LocationMatch "^/data/.*/attachments/.+/.+">
        ExpiresDefault "access plus 1 years"
        FileETag none
    </LocationMatch>

    <Location "/nlw/plugin/widgets/rpc_relay.html">
        ExpiresDefault "access plus 1 seconds"
        FileETag none
    </Location>
    <Location "/nlw/plugin/widgets/ifpc_relay.html">
        ExpiresDefault "access plus 1 seconds"
        FileETag none
    </Location>
    <Location "/ig/ifpc_relay">
        ExpiresDefault "access plus 1 seconds"
        FileETag none
    </Location>

[%- IF config.is_dev %]
    Redirect 301 /favicon.ico http://www.socialtext.net/favicon.ico
[%- END %]

    Header set X-UA-Compatible IE=EmulateIE7
[% END %][%# server_common %]


[%# ######################################
  # Real code starts 
  # ###################################### %]
ErrorDocument 502 /static/html/502.html
ErrorDocument 500 /static/html/500.html

[%- IF config.custom_http_port and !config.is_dev -%]
Listen [% config.custom_http_port %]
[%- END %]

<VirtualHost *:[% config.ports.http %]>
[%- IF config.custom_http_port AND !config.is_dev %]
    RewriteCond %{REQUEST_METHOD} ^TRACE
    RewriteRule .* - [F,L]
    RewriteRule ^(.*) http://%{SERVER_NAME}:[% config.custom_http_port %]$1 [R,L,NE]
</VirtualHost>

<VirtualHost *:[% config.custom_http_port %]> 
[%- END %]
[%- IF config.ssl_only %]
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} ^TRACE
    RewriteRule .* - [F,L]
    RewriteRule ^(.*) https://%{SERVER_NAME}:[% config.ports.https %]$1 [R,L,NE]
</VirtualHost>

<VirtualHost *:[% config.ports.https %]> 
[%- ELSE %]
[%- server_common( config.apache_perl_port, 0 ) -%]
</VirtualHost>
    [%- IF config.use_ssl %]

<VirtualHost _default_:[% config.ports.https %]>
    [%- END %]
[%- END %]

[%- IF config.ssl_only or config.use_ssl %]
    [% server_common( config.apache_perl_ssl_port, 1 ) %]
    SSLEngine on
    SSLCertificateFile    [% config.ssl_base_dir %]/certs/[% config.nlw_server_hostname %].crt
    SSLCertificateKeyFile [% config.ssl_base_dir %]/private/[% config.nlw_server_hostname %].key
    SetEnvIf User-Agent ".*MSIE.*" ssl-unclean-shutdown force-response-1.0
</VirtualHost>
[%- END %]

