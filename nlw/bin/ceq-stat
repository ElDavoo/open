#!/usr/bin/env perl
# @COPYRIGHT@
use warnings;
use strict;
use Getopt::Long;
use Pod::Usage 1.12;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Socialtext::Jobs;
use Socialtext::l10n qw/loc/;
use Socialtext::DaemonUtil;

# don't run as root
Socialtext::DaemonUtil->Check_and_drop_privs();

GetOptions(
    'h|help|?' => sub {pod2usage({-verbose => 1, -input => $0}); exit},
    'H|man'    => sub {pod2usage({-verbose => 2, -input => $0}); exit},
) or die;

my $Interval = shift;

Socialtext::Jobs->Unlimit_list_jobs();

while (1) {
    show_total();
    last unless $Interval;
    select(undef, undef, undef, $Interval);
    print "\n";
}

sub show_total {
    my %count;
    for my $type (Socialtext::Jobs->job_types) {
        my @jobs = Socialtext::Jobs->list_jobs(funcname => $type);
        (my $name = $type) =~ s/.+:://;
        
        my $grabbed = 0;
        $grabbed++ for grep { $_->grabbed_until } @jobs;
        $count{$name} = {
            queued => scalar(@jobs),
            grabbed => $grabbed,
        };
    }

    my $sum = 0;
    print loc("Jobs in the queue:"),"\n";
    for my $name (sort keys %count) {
        next if $name eq 'Test';
        my $c = $count{$name};

        printf "  %15s %5d", $name, $c->{queued};
        if ($c->{grabbed}) {
            my $grabbed = loc('[_1] grabbed jobs', $c->{grabbed});
            print " ($grabbed)", $name, $c->{queued};
        }
        print "\n";
        $sum += $c->{queued};
    }
    printf "  %15s %5d\n", loc("Total"), $sum;
}

=head1 NAME

ceq-stat - Provide a human-readable summary of the jobs in
ceqlotron's queue.

=head1 SYNOPSIS

B<ceq-stat>

B<ceq-stat> 1.5

=head1 OPTIONS

    --help      This help page
    --man       Manual page

An optional delay interval can be provided to repeat the output.

=head1 SAMPLE OUTPUT

 Jobs in the queue:
   AttachmentIndex  1
               Cmd  5 (1 grabbed)
         PageIndex  0
             Total  6

=head1 SEE ALSO

L<celqlotron(1)>, L<ceq-read(1)>

=cut
