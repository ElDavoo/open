#!/usr/bin/env perl
# @COPYRIGHT@
use 5.12.0;
use warnings;
use FindBin qw/$RealBin/;
use lib "$RealBin/../lib";
use Locale::Maketext::Lexicon 0.85; # Ensures xgettext.pl terminates
use File::Basename 'basename';
use Socialtext::System qw/shell_run/;
chdir "$RealBin/..";

my @plugins = map { basename($_) } grep { -d and (-d "$_/share" or -d "$_/template") } glob('share/plugin/*');
my %Sections = (
    bin => 'bin',
    lib => 'lib',
    wikiwyg => 'share/skin/wikiwyg/javascript',
#   s2 => ['share/skin/s2/template', 'share/skin/s2/javascript'],
    s3 => ['share/skin/s3/template', 'share/skin/s3/javascript'],
    map {
        $_ => [grep { -d and (join(',', glob("$_/*")) ne "$_/images") } glob("share/plugin/$_/{share,template}")]
    } @plugins
);

%Sections = map {
    /^plugins?$/
        ? (map { $_ => $Sections{$_} } @plugins)
        : $Sections{$_}
            ? ($_ => $Sections{$_})
            : die "No such section: $_"
} @ARGV if @ARGV;

# Cleanup temporary JS files before extracting
shell_run("dev-bin/jsmake cleanall");

for my $key (sort keys %Sections) {
    my $dir = $Sections{$key};
    $dir = [$dir] unless ref $dir;
    next unless @$dir;

    if ($key eq 'wikiwyg') {
        shell_run('./dev-bin/l10n-widget-to-js');
        unlink 'lib/Socialtext/Widget_resource.pm';
    }

    shell_run(
        qw( xgettext.pl -now -P perl=* -P tt2=* ),
        -o => "share/l10n/en/$key.po",
        map { -D => $_ } @$dir
    )
}

#shell_run("msgcat share/l10n/en/*.po > share/l10n/en.po");
