#!/bin/bash -e
# @COPYRIGHT@

# '-m' option ( minimal ) will set up ony 'admin_no_pages' fixture, 'ALL' is default
# '-b' option will set apache up with benchmark_mode = 1
# '-w' option will _not_ upadte widgets/galleries, also implies '-b'
# '-p' option will _not_ start up nlw in this script
# '-h' option will import the help-en wiki

HELPEN=0
FIXTURE='ALL'
BENCHMARK=0
PAUSE=0
UPDATE_WIDGETS=1
while getopts "hmbpw" OPT; do
  case $OPT in
    h) HELPEN=1;;
    b) BENCHMARK=1;;
    m) FIXTURE=admin_no_pages;;
    p) PAUSE=1;;
    w) UPDATE_WIDGETS=0;BENCHMARK=1;;
  esac
done

if [ "$ST_CURRENT" != "" ]; then
    echo "Changing to $ST_CURRENT/nlw"
    cd $ST_CURRENT/nlw
fi

# Clean up dead symlinks
find -L -type l -delete

perl -MCwd -le'print "Running ", Cwd::abs_path(shift)' $0

START_PORT=21000 # for SSL

function rm_dir {
   DIR=`bin/st-config echo $1`
   if [ -d $DIR ]; then rm -r $DIR; fi
}

cd $(dirname $0)/..

./dev-bin/create-skinlinks

set -x
PORT=$(($START_PORT+$UID)) ./configure --dev=1 \
    --server-admin=support@socialtext.com \
    --support-address='http://www.socialtext.com/customers/support_request.php'
set +x

# Remove a bunch of stuff
if [ -e t/tmp ]; then
    dev-bin/nlwctl --test stop
    rm -r t/tmp* &
fi
rm_dir "template_compile_dir";
rm_dir "formatter_cache_dir";

# Shut down any running copy of ST and/or OpenLDAP
set -x
NLWCTL_QUIET=1 dev-bin/nlwctl stop
if [ -e ~/.nlw ]; then
    # we may have more than one openldap running, make sure to kill 'em all
    for PIDFILE in ~/.nlw/run/slapd*.pid; do st-bootstrap-openldap stop; done
fi

# when switching to nginx you might have apache2 running still
killall /usr/sbin/apache2 >/dev/null 2>&1 || true;
# ditto for the old SCGI json proxy
killall json-proxy.scgi 2>&1 || true;

# Create the basic dev-env
rm -rf $HOME/.nlw/
PLUGINS=${PLUGINS:-widgets agile csskit dashboard people signals socialcalc apache socialpoint control groups provisioning}
st-make-all @clean
st-make-all @all
dev-bin/link-plugins $PLUGINS
rm -f etc/socialtext/db/cache.*.sql
set +e
QUIET=1 dev-bin/link-console
set -e
dev-bin/make-test-fixture --home_dir $HOME --fixture clean
dev-bin/make-test-fixture --home_dir $HOME --fixture base_config
dev-bin/make-test-fixture --home_dir $HOME --fixture $FIXTURE
[ $HELPEN == 1 ] && dev-bin/make-test-fixture --home_dir $HOME --fixture help

# Setup robots.txt file to prevent dev-env heat death
perl -le 'print "User-agent: *\nDisallow: /"' > ~/.nlw/root/docroot/robots.txt

echo "Linking in extra modules ..."
# We set +e here so that if these fail, fdefs continues
# otherwise everyone is forced to have all this code checked out
set +e
QUIET=1 dev-bin/link-console
dev-bin/link-reports

# Start the supervisor
dev-bin/start-console-supervisor
set -e

[ $BENCHMARK == 1 ] && st-config set benchmark_mode 1

if [ $PAUSE == 0 ]; then
    echo "Starting nginx and apache-perl"
    dev-bin/nlwctl start
else
    echo "Skipping NLW startup, you need do it manually"
fi


st-admin enable-plugin --all-workspaces --plugin socialcalc
st-admin enable-plugin --all-accounts --plugin dashboard
st-admin enable-plugin --all-accounts --plugin signals
st-admin enable-plugin --all-accounts --plugin groups

if [ $UPDATE_WIDGETS == 1 ]; then
    st-widgets update-all
    st-widgets update-gallery
fi

# Clean up dead symlinks
find -L -type l -delete

echo "fresh-dev-env-from-scratch complete."
