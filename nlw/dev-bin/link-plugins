#!/usr/bin/perl
# @COPYRIGHT@
use strict;
use warnings;
use FindBin;
use Fatal qw/chdir mkdir symlink/;
use lib "$FindBin::Bin/../lib";
use File::Find 'find';
use File::Basename qw(basename);
use Socialtext::System qw/shell_run/;

sub usage {
    my $msg = shift;
    warn "$msg\n" if $msg;
    die "USAGE: $0 <plugin list>\n\n";
}

sub link_directory {
    my ($fromdir, $todir, $subdir) = @_;
    return unless -d "$fromdir/$subdir";

    if (!-d $todir) {
        warn "Making directory $todir\n";
        mkdir $todir or die "Cannot mkdir $todir: $!";
    }

    find({
        wanted => sub {
            return if m{/\.svn/};
            return if basename($_) =~ m{^\.};
            my $from = $_;
            (my $to = $from) =~ s{^$fromdir}{$todir};
            if (-d $from and -l $to) {
                unlink $to;
            }
            unless (-e $to) {
                unlink $to if -l $to;
                if (-d $from) {
                    warn "Making directory $to\n";
                    mkdir $to or die "Cannot mkdir $to: $!";
                }
                else {
                    warn "linking $to\n";
                    symlink $from, $to or die "Cannot link $from to $to: $!";
                }
            }
        },
        no_chdir => 1,
    }, "$fromdir/$subdir");
}

usage unless @ARGV;
while (my $plugin = shift) {
    warn "Linking the $plugin plugin\n";
    my $plugin_dir = "$FindBin::Bin/../../plugins/$plugin";
    usage("plugin $plugin doesn't exist") unless -d $plugin_dir;
    link_directory($plugin_dir, "$FindBin::Bin/..", 'lib');
    link_directory($plugin_dir, "$FindBin::Bin/..", 't');
    link_directory($plugin_dir, "$ENV{HOME}/.nlw", 'etc/socialtext/uri_map.d');

    local $Socialtext::System::SILENT_RUN = 1;
    shell_run("cd $plugin_dir && make") if -f "$plugin_dir/Makefile";
}
