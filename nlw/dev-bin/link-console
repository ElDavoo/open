#!/usr/bin/env perl
# @COPYRIGHT@
use strict;
use warnings;
use File::Path qw/mkpath/;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Socialtext::File qw/set_contents/;

my $branch_arg = shift;
my $branch = $branch_arg;

if ($branch) {
    $branch = "branches/$branch";
}
else {
    my $current_branch = qx(current-branch);
    chomp $current_branch;
    $branch = "branches/$current_branch";
}

print "Linking in console from $branch...\n\n";
my $appliance_base = "$ENV{HOME}/src/st/appliance";
my $console_dir = "$appliance_base/$branch/libsocialtext-appliance-perl";

# Look for a symlink to the appliance area beside nlw/
my $possible_dir = "$FindBin::Bin/../../appliance";
if (!$branch_arg and -d $possible_dir) {
    $console_dir = "$possible_dir/libsocialtext-appliance-perl";
}
else {
    die "Appliance repo is not checked out to $appliance_base" unless -d $appliance_base;
}

if (!-d $console_dir && -d "$appliance_base/.git") {
    $console_dir = "$appliance_base/libsocialtext-appliance-perl";
}

unless (-d $console_dir) {
    warn "Couldn't find console branch '$console_dir' - using trunk";
    $console_dir = "$appliance_base/trunk/libsocialtext-appliance-perl";
    die "Couldn't find console trunk '$console_dir'" unless -d $console_dir;
}

my @libs = qx(find $console_dir/lib -name '*.pm');
for my $f (@libs) {
    chomp $f;
    $f =~ s#^\Q$console_dir\E/##;
    print "Linking in $f...\n" unless ($ENV{QUIET});
    (my $dir = $f) =~ s#^(.+)/.+#$1#;
    unless (-d $dir) {
        mkpath $dir or die "Can't mkpath $dir: $!";
    }
    unlink $f;
    symlink "$console_dir/$f", $f or die "Can't symlink $console_dir/$f, $f: $!";

    # add an entry to the local .gitignore if it's missing
    unless (`grep $f .gitignore`) {
        print "adding entry for $f to .gitignore\n";
        system("echo $f >> .gitignore");
    }
}

my @tmpls = qx(find $console_dir/template -name '*.tmpl' -or -name '*.html');
for my $f (@tmpls ) {
    chomp $f;
    $f =~ s#^\Q$console_dir\E/##;
    print "Linking in $f...\n" unless ($ENV{QUIET});
    (my $dir = $f) =~ s#^(.+)/.+#$1#;
    
    unless (-d "share/console-template/$dir") {
        mkpath "share/console-template/$dir" or die "Can't mkpath $dir: $!";
    }
    unlink "share/console-template/$f";
    symlink "$console_dir/$f", "share/console-template/$f" or die "Can't symlink $console_dir/$f, $f: $!";
}



my $console_root = "$ENV{HOME}/.nlw/root/console";
if (! -d $console_root) {
    mkpath $console_root or die "Can't mkpath $console_root: $!";
}
my $console_cgi = "$console_root/index.cgi";
print "Linking in console cgi ($console_cgi) ...\n" unless ($ENV{QUIET});
unlink $console_cgi;
set_contents($console_cgi, <<EOT);
#!/bin/bash
export ST_APP_CONFIG=$ENV{HOME}/.nlw/etc/socialtext/appliance.conf
perl -I$ENV{HOME}/src/st/current/nlw/lib $console_dir/cgi/appliance.cgi
EOT
chmod 0755, $console_cgi or die "Can't chmod 0755, $console_cgi: $!";
