diff --git a/nlw/lib/Socialtext/Formatter/Viewer.pm b/nlw/lib/Socialtext/Formatter/Viewer.pm
index fd22758..996868e 100644
--- a/nlw/lib/Socialtext/Formatter/Viewer.pm
+++ b/nlw/lib/Socialtext/Formatter/Viewer.pm
@@ -74,6 +74,8 @@ sub process {
     my $raw_text        = shift;
     my $page            = shift;
     
+    use Carp qw/cluck/;
+    cluck 'o hai';
     Socialtext::Timer->Continue('viewer_process');
     my $large_formatted = $self->_large_check(\$raw_text);
     if ($large_formatted) {
diff --git a/nlw/lib/Socialtext/Helpers.pm b/nlw/lib/Socialtext/Helpers.pm
index 6229d3a..1d75d20 100644
--- a/nlw/lib/Socialtext/Helpers.pm
+++ b/nlw/lib/Socialtext/Helpers.pm
@@ -204,6 +204,17 @@ sub _get_history_list_for_template
     return  \@historylist;
 }
 
+sub thunker {
+    my $storage;
+    my $called;
+    my $key = shift;
+    my $generate = shift;
+    return($key => sub { 
+        $storage = $generate->() unless $called++;
+        return $storage;
+    });
+}
+
 sub global_template_vars {
     my $self = shift;
 
@@ -221,6 +232,7 @@ sub global_template_vars {
 
     my $renderer = Socialtext::TT2::Renderer->instance();
 
+    Socialtext::Timer->Continue('gtv-search');
     my $search_box = $renderer->render(
         template => \$snippet,
         paths => $self->hub->skin->template_paths,
@@ -232,7 +244,9 @@ sub global_template_vars {
             )->all],
         }
     );
+    Socialtext::Timer->Pause('gtv-search');
 
+    Socialtext::Timer->Continue('gtv-pluginz');
     my $plugins_enabled = [
         map { $_->name }
         grep {
@@ -247,6 +261,7 @@ sub global_template_vars {
             $cur_ws->account->is_plugin_enabled($_->name)
         } Socialtext::Pluggable::Adapter->plugins
     ];
+    Socialtext::Timer->Pause('gtv-pluginz');
     
     my $logo = $self->hub->skin->dynamic_logo;
 
@@ -255,46 +270,41 @@ sub global_template_vars {
 
     my $locale = $self->hub->display->preferences->locale;
     my %result = (
-        firebug           => $self->hub->rest->query->param('firebug') || 0,
-        action            => $self->hub->cgi->action,
+        'time'               => time,
         pluggable         => $self->hub->pluggable,
         loc               => \&loc,
         loc_lang          => ($locale ? $locale->value : undef),
-        css               => $self->hub->skin->css_info,
-        user              => $self->_get_user_info,
-        wiki              => $self->_get_wiki_info,
-        checker           => $self->hub->checker,
-        current_workspace => $cur_ws,
-        current_page      => $self->hub->pages->current,
-        home_is_dashboard =>
-            $cur_ws->homepage_is_dashboard,
-        homepage_weblog =>
-            $cur_ws->homepage_weblog,
-        workspace_present  => $cur_ws->real,
-        customjs           => $self->hub->skin->customjs,
-        app_version        => Socialtext->product_version,
-        skin_name          => $self->hub->skin->skin_name,
-        search_box_snippet => $search_box,
-        miki_url           => $self->miki_path,
-        stax_info          => $self->hub->stax->hacks_info,
-        workspaceslist     => $self->_get_workspace_list_for_template,
-        default_workspace  => $self->default_workspace,
-        ui_is_expanded     => defined($cookies->{"ui_is_expanded"}),
-        plugins_enabled    => $plugins_enabled,
-        plugins_enabled_for_current_workspace_account => $plugins_enabled_for_current_workspace_account,
-        self_registration  => Socialtext::AppConfig->self_registration(),
-        time               => time,
-        dynamic_logo_url   => $logo,
+        thunker(firebug           => sub { $self->hub->rest->query->param('firebug') || 0 }),
+        thunker(action            => sub { $self->hub->cgi->action }),
+        thunker(css               => sub { $self->hub->skin->css_info }),
+        thunker(user              => sub { $self->_get_user_info }),
+        thunker(wiki              => sub { $self->_get_wiki_info }),
+        thunker(checker           => sub { $self->hub->checker }),
+        thunker(current_workspace => sub { $cur_ws }),
+        thunker(current_page      => sub { $self->hub->pages->current }),
+        thunker(home_is_dashboard => sub { $cur_ws->homepage_is_dashboard }),
+        thunker(homepage_weblog => sub { $cur_ws->homepage_weblog }),
+        thunker(workspace_present  => sub { $cur_ws->real }),
+        thunker(customjs           => sub { $self->hub->skin->customjs }),
+        thunker(app_version        => sub { Socialtext->product_version }),
+        thunker(skin_name          => sub { $self->hub->skin->skin_name }),
+        thunker(search_box_snippet => sub { $search_box }),
+        thunker(miki_url           => sub { $self->miki_path }),
+        thunker(stax_info          => sub { $self->hub->stax->hacks_info }),
+        thunker(workspaceslist     => sub { $self->_get_workspace_list_for_template }),
+        thunker(default_workspace  => sub { $self->default_workspace }),
+        thunker(ui_is_expanded     => sub { defined($cookies->{"ui_is_expanded"}) }),
+        thunker(plugins_enabled    => sub { $plugins_enabled }),
+        thunker(plugins_enabled_for_current_workspace_account => sub { $plugins_enabled_for_current_workspace_account }),
+        thunker(self_registration  => sub { Socialtext::AppConfig->self_registration() }),
+        thunker(dynamic_logo_url   => sub { $logo }),
+        thunker(locking_enabled       => sub { $self->hub->current_workspace->allows_page_locking }),
+        thunker(can_lock              => sub { $self->hub->checker->check_permission('lock') }),
+        thunker(page_locked           => sub { $self->hub->pages->current->locked }),
+        thunker(page_locked_for_user  => sub { $self->hub->pages->current->locked && $self->hub->current_workspace->allows_page_locking && !$self->hub->checker->check_permission('lock') }),
+        thunker(role_for_user      => sub { $cur_ws->role_for_user(user=>$cur_user) || undef }),
+        thunker(signals_only       => sub { $self->signals_only }),
         $self->hub->pluggable->hooked_template_vars,
-        locking_enabled       => $self->hub->current_workspace->allows_page_locking,
-        can_lock              => $self->hub->checker->check_permission('lock'),
-        page_locked           => $self->hub->pages->current->locked,
-        page_locked_for_user  => 
-            $self->hub->pages->current->locked && 
-            $self->hub->current_workspace->allows_page_locking &&
-            !$self->hub->checker->check_permission('lock'),
-        role_for_user      => $cur_ws->role_for_user(user=>$cur_user) || undef,
-        signals_only       => $self->signals_only,
     );
 
     # We're disabling the history global nav functionality for now, until its
