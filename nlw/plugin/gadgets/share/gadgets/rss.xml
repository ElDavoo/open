<Module>
  <ModulePrefs title="__UP_title__">
    <Require feature="dynamic-height" />
    <Require feature="setprefs" />
    <Require feature="settitle" />
    <Require feature="dynamic-height" />
    <Require feature="socialtext" />
  </ModulePrefs>
 <UserPref name="rss_feed" display_name="RSS Feed" default_value="http://www.socialtext.com/blog/feed"/>
 <UserPref name="title" default_value="RSS Viewer" datatype="hidden"/>
 <UserPref name="count" display_name="Items Displayed" datatype="enum" default_value="5">
     <EnumValue value="5"/>
     <EnumValue value="10"/>
     <EnumValue value="15"/>
     <EnumValue value="20"/>
     <EnumValue value="25"/>
 </UserPref>
 <UserPref name="max_desc" display_name="Maximum description characters" datatype="enum" default_value="250">
     <EnumValue value="100"/>
     <EnumValue value="250"/>
     <EnumValue value="0" display_value="Unlimited"/>
 </UserPref>
  <Content type="html">
    <![CDATA[

<style>

  #my__MODULE_ID__-content {
    text-align: left;
    margin-left: 5px;
  }
  .rss_item {
    padding: 5px;  
  }

  .rss_title {
  }
  a {
    text-decoration: none;  
    font-size: 1.2em;
  }
  .rss_body {
    font-size: 1.2em;
  }

</style>
<div id="my__MODULE_ID__-content"></div>
<script>
    var params = {};
    var url = '__UP_rss_feed__';
    var prefs = new gadgets.Prefs();

    if ('__UP_title__')
        gadgets.window.setTitle('__UP_title__');

    var callback = function(feed) {
        feed = feed.data;

        if (feed.Title) {
            gadgets.window.setTitle(feed.Title);
            prefs.set('title',feed.Title);
        }

        var content_node = document.getElementById('my__MODULE_ID__-content');

        for (var i=0; i<feed.Entry.length; i++) {
            var item = feed.Entry[i];

            var item_div = document.createElement('div');
            var h4 = document.createElement('h4');
            var a = document.createElement('a');
            var border = document.createElement('div');
            var desc_div = document.createElement('p');

            item_div.className = 'myContent';
            border.className = 'border';
            a.href = item.Link
            a.style['text-size'] = '10px';
            a.style['text-decoration'] = 'none';

            var summary = item.Summary.replace(/<[^>]+>/g,'');
            if (__UP_max_desc__ && summary.length > __UP_max_desc__) {
                var max = summary.indexOf(' ', __UP_max_desc__) + 1;
                desc_div.innerHTML = summary.substr(0,max);

                if (max < summary.length) {
                    desc_div.innerHTML += 
                        '<a href="#" title="' +
                        summary.substr(max, summary.length - max) +
                        '">...</a>';
                }
            }
            else {
                desc_div.innerHTML = summary;
            }

            item_div.appendChild(h4);
            h4.appendChild(a);
            a.appendChild(document.createTextNode(item.Title));
            item_div.appendChild(desc_div);

            content_node.appendChild(item_div);
            content_node.appendChild(border);
        }
        gadgets.window.adjustHeight();
    }

    gadgets.util.registerOnLoadHandler( function() {
        var params = {};
        params.CONTENT_TYPE = "FEED";
        params.NUM_ENTRIES = __UP_count__;
        params.GET_SUMMARIES = true;
        gadgets.io.makeRequest(url, callback, params);
    });
</script>

    ]]>

  </Content>
</Module>
