#!/usr/bin/env perl
# @COPYRIGHT@
use strict;
use warnings;
use File::Temp qw/tmpnam/;
use LWP::UserAgent;
use Socialtext::User; # loaded here to avoid a circular dependency
use Socialtext::Migration::Utils qw/ensure_socialtext_schema/;
use Socialtext::People::Profile;
use Socialtext::SQL qw/sql_begin_work sql_execute sql_commit/;

ensure_socialtext_schema(8);

my $ua = LWP::UserAgent->new;
$ua->timeout( 5 );

my $result = sql_execute( <<EOSQL );
SELECT id,
       photo,
       small_photo
  FROM person
 WHERE photo IS NOT NULL
    OR small_photo IS NOT NULL
EOSQL

sql_begin_work();
for my $row ( @{ $result->fetchall_arrayref } ) {
    my ( $id, $photo_url, $small_photo_url ) = @$row;

      $photo_url = $small_photo_url
          unless ( defined $photo_url );

    my $blob = fetch_blob( $photo_url );
    my $profile = Socialtext::People::Profile->GetProfile( $id );

    # if this blows up, let's skip it.
    eval { $profile->save_profile_image( $blob ) };
    warn "Error saving profile image: $@\n" if $@;
}
sql_commit();

exit;

sub fetch_blob {
    my $photo_url = shift;
    my $img_blob = fetch_from_web( $photo_url );
    return $img_blob;
}

sub fetch_from_web {
    my $url = shift;

    my $response = $ua->get( $url );

    return ( $response->is_success )
        ? $response->content 
        : '';
}

