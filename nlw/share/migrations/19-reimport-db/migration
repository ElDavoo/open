#!/bin/sh

OLDDB=`st-config echo db_schema_name`
NEWDB="NLW_reimport"
PGUSER=`st-config echo db_user`
MIGDIR=`dirname $0`

# Make a backup
su - www-data -c 'st-db --dump-data'

# Create a new temporary database
su - postgres -c "dropdb -e $NEWDB" 2> /dev/null
su - postgres -c "createdb -E UTF8 -O nlw -e $NEWDB"

# Set up the new schema
su - postgres -c "psql $NEWDB -e -f $MIGDIR/nlw-schema.sql"

# Set defaults, remove NULL values from old data for columns
# that have been added by migrations
su - postgres -c "psql $OLDDB -c \"UPDATE \\\"Workspace\\\" SET \\\"no_max_image_size\\\" = FALSE     WHERE \\\"no_max_image_size\\\" IS NULL\""
su - postgres -c "psql $OLDDB -c \"UPDATE \\\"Workspace\\\" SET \\\"cascade_css\\\"       = TRUE      WHERE \\\"cascade_css\\\"       IS NULL\""
su - postgres -c "psql $OLDDB -c \"UPDATE \\\"Workspace\\\" SET \\\"uploaded_skin\\\"     = FALSE     WHERE \\\"uploaded_skin\\\"     IS NULL\""
su - postgres -c "psql $OLDDB -c \"UPDATE \\\"Workspace\\\" SET \\\"customjs_name\\\"     = ''::text  WHERE \\\"customjs_name\\\"     IS NULL\""
su - postgres -c "psql $OLDDB -c \"UPDATE \\\"Workspace\\\" SET \\\"customjs_uri\\\"      = ''::text  WHERE \\\"customjs_uri\\\"      IS NULL\""

# Create a dump file from data in the old database
# We want to filter out the SELECT statements, as they
# deal with Sequences.  We only care about Sequences
# and Tables.
DUMPFILE="/tmp/$OLDDB-dump.sql"
su - postgres -c "pg_dump --data-only $OLDDB | grep '^SELECT' > $DUMPFILE"

# We must dump these tables in a specific order, to avoid problems
# with the referential integrity of the table.  All tables that
# refer to other tables must appear later on.
TABLES="
Account
Permission
Role
User
UserId
Workspace
UserEmailConfirmation
UserMetadata
UserWorkspaceRole
Watchlist
WorkspaceBreadcrumb
WorkspaceCommentFormCustomField
WorkspacePingURI
WorkspaceRolePermission
search_set_workspaces
search_sets
sessions
"
for table in $TABLES; do 
    echo "Dumping table $table"
    su - postgres -c "pg_dump --column-inserts --data-only --table $table $OLDDB >> $DUMPFILE"
done

# Import the data into the new database
su - postgres -c "psql $NEWDB -f /tmp/$OLDDB-dump.sql"

# TODO: Add tests to make sure no critical data will be lost here.

# Delete the old database and rename the new one
su - postgres -c "psql -c \"DROP DATABASE \\\"$OLDDB\\\"\""
su - postgres -c "psql -c \"ALTER DATABASE \\\"$NEWDB\\\" RENAME TO \\\"$OLDDB\\\"\""

# Change the ownership on the database
RELATIONS="/tmp/$OLDDB-relations-$$.txt"
su - postgres -c "psql $OLDDB -t -c \"\dts\" | awk '{print \$3}' > $RELATIONS"
for r in $(cat $RELATIONS); do
  su - postgres -c "psql $OLDDB -c \"alter table \\\"$r\\\" owner to $PGUSER\""
done
